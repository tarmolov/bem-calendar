#!/bin/bash
#
# Run test for changed js files
#
PATCH_FILE="working-tree.patch"
NPM_BIN="./node_modules/.bin"
ENB=$NPM_BIN/enb

function cleanup {
    exit_code=$?
    if [ -f "$PATCH_FILE" ]; then
        git apply "$PATCH_FILE" 2> /dev/null
        rm "$PATCH_FILE"
    fi
    exit $exit_code
}

trap cleanup EXIT SIGINT SIGHUP

# Cancel any changes to the working tree that are not going to be committed
git diff > "$PATCH_FILE"
git checkout -- .

# Collect test files
# 1. Filter only *.js and *.test.js files.
# 2. Try to find test files for each filtered file.
git_cached_client_js=$(git diff --cached --name-only --diff-filter=ACMR | grep -E '\/(?:[^.]*|.*\.test)\.js$' | xargs echo)
TEST_FILES=()
for file in $git_cached_client_js
do
    basename=$(basename $file) # /path/to/file/file.js -> file.js
    # ${x%%.*} removes all characters after first point in variable x
    testfile=$( dirname "$file" )/${basename%%.*}.test.js
    if [ -f "$testfile" ]; then
        TEST_FILES+=($testfile)
    fi
done

tests_list=${TEST_FILES[@]}
if [ "$tests_list" ]; then
    TEST_CASES="$tests_list" $ENB make test -n
    $NPM_BIN/mocha-phantomjs test/test.html
fi
